#!/usr/bin/env zsh

unset AWS_PROFILE

set -euo pipefail

# Configurable values
SSO_SESSION="zorg"
SSO_ROLE_NAME="AdministratorAccess"
SSO_REGION="us-east-1"
AWS_CONFIG_FILE="$HOME/.aws/config"

create_temp_config() {
  local temp_config
  temp_config=$(mktemp)
  cat > "$temp_config" <<EOF
[sso-session $SSO_SESSION]
sso_region = $SSO_REGION
sso_start_url = https://zorg.awsapps.com/start
EOF
  echo "$temp_config"
}

sso_login() {
  local config_file="$1"
  AWS_CONFIG_FILE="$config_file" aws sso login --sso-session "$SSO_SESSION"
}

get_access_token() {
  jq -r '.accessToken' $(ls -t ~/.aws/sso/cache/*.json | head -n 1)
}

add_profiles_to_config() {
  local config_file="$1"
  local access_token="$2"
  local accounts
  accounts=($(aws sso list-accounts --access-token "$access_token" --region "$SSO_REGION" --output json | jq -r '.accountList[] | "\(.accountName):\(.accountId)"'))
  for entry in $accounts; do
    local account_name="${entry%%:*}"
    local account_id="${entry##*:}"
    account_name="${account_name// /-}"
    printf "\n[profile %s]\nsso_session = %s\nsso_account_id = %s\nsso_role_name = %s\nregion = %s\noutput = json\n" \
      "$account_name" "$SSO_SESSION" "$account_id" "$SSO_ROLE_NAME" "$SSO_REGION" >> "$config_file"
  done
}

main() {
  local temp_config access_token
  temp_config=$(create_temp_config)
  sso_login "$temp_config"
  access_token=$(get_access_token)
  add_profiles_to_config "$temp_config" "$access_token"
  cp "$temp_config" "$AWS_CONFIG_FILE"
  rm "$temp_config"
  echo "AWS SSO profiles updated for all enabled accounts."
}

main "$@"
